#!/usr/bin/env bash
# Summary: Set or show the shell-specific erlang release
#
# Usage: erlenv shell <release>
# erlenv shell --unset
#
# Sets a shell-specific erlang release by setting the `ERLENV_RELEASE'
# environment variable in your shell. This version overrides local
# application-specific releases and the global release.
#
# <release> should be a string matching a erlang release known to erlenv.
# The special release string `system' will use your default system erlang.
# Run `erlenv releases' for a list of available erlang releases.
set -e
[ -n "$ERLENV_DEBUG" ] && set -x

# provide erlenv completions
if [ "$1" = "--complete" ]; then
  echo --unset
  echo system
  exec erlenv-releases --bare
fi

release="$1"

if [ -z "$release" ]; then
  if [ -z "$ERLENV_RELEASE" ]; then
    echo "erlenv: no shell-specific release configured" >&2
    exit 1
  else
    echo "echo \"\$ERLENV_RELEASE\""
    exit
  fi
fi

if [ "$release" = "--unset" ]; then
  echo "unset ERLENV_RELEASE"
  exit
fi

# make sure the specified release is installed.
if erlenv-prefix "$release" >/dev/null; then
  echo "export ERLENV_RELEASE=\"${release}\""
  exit
else
  echo "return 1"
  exit 1
fi
